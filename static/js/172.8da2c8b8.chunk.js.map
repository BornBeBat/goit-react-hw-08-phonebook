{"version":3,"file":"static/js/172.8da2c8b8.chunk.js","mappings":"iQAEaA,EAAQC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAIjBC,EAAQH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kJASnBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sEAMpBK,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oMAIR,SAAAO,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,OAAO,IAEzB,SAAAC,GAAQ,OAAAA,EAALH,MAAkBC,OAAOG,OAAO,IAC7C,SAAAC,GAAQ,OAAAA,EAALL,MAAkBC,OAAOG,OAAO,I,UCiC5D,EAtDc,WACZ,IAAAE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACd,OAAQD,GACN,IAAK,QACHX,EAASY,GACT,MACF,IAAK,WACHR,EAAYQ,GAKlB,EAOA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACtC,EAAK,CAAAqC,SAAC,WAEPF,EAAAA,EAAAA,MAAC/B,EAAK,CAACmC,SAVU,SAAAT,GACnBA,EAAEU,iBACFb,GAASc,EAAAA,EAAAA,IAAM,CAAEpB,MAAAA,EAAOI,SAAAA,KACxBH,EAAS,IACTI,EAAY,GACd,EAKkCW,SAAA,EAC5BF,EAAAA,EAAAA,MAAC7B,EAAK,CAAA+B,SAAA,CAAC,iBAELC,EAAAA,EAAAA,KAAC9B,EAAK,CACJkC,KAAK,QACLT,KAAK,QACLC,MAAOb,EACPsB,UAAQ,EACRC,SAAUf,QAGdM,EAAAA,EAAAA,MAAC7B,EAAK,CAAA+B,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC9B,EAAK,CACJkC,KAAK,WACLT,KAAK,WACLC,MAAOT,EACPkB,UAAQ,EACRC,SAAUf,QAGdS,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAAQL,SAAC,gBAI9B,C","sources":["pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-block-start: 2em;\n  gap: 2em;\n  align-items: center;\n  margin-bottom: 1.2em;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 0.3em;\n`;\n\nexport const Input = styled.input`\n  padding: 0.4em 1em;\n  border-radius: 0.6em;\n  border: none;\n  outline: 0.1em solid ${({ theme }) => theme.colors.acsent1};\n  &:focus {\n    box-shadow: 0px 0px 10px 2px ${({ theme }) => theme.colors.acsent2} inset,\n      0px 0px 10px 1px ${({ theme }) => theme.colors.acsent2};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'myRedux';\n\nimport { Title, Forma, Input, Label } from './Login.styled';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <Title>Login</Title>\n\n      <Forma onSubmit={handleSubmit}>\n        <Label>\n          Email address\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={handleChange}\n          />\n        </Label>\n        <button type=\"submit\">Log in</button>\n      </Forma>\n    </>\n  );\n};\nexport default Login;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Forma","_templateObject2","Label","_templateObject3","Input","_templateObject4","_ref","theme","colors","acsent1","_ref2","acsent2","_ref3","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","dispatch","useDispatch","handleChange","e","_e$target","target","name","value","_jsxs","_Fragment","children","_jsx","onSubmit","preventDefault","login","type","required","onChange"],"sourceRoot":""}